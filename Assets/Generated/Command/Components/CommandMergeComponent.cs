//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public ECS.Components.Command.MergeComponent merge { get { return (ECS.Components.Command.MergeComponent)GetComponent(CommandComponentsLookup.Merge); } }
    public bool hasMerge { get { return HasComponent(CommandComponentsLookup.Merge); } }

    public void AddMerge(ECS.Components.Command.MergeInfoVo newValue) {
        var index = CommandComponentsLookup.Merge;
        var component = (ECS.Components.Command.MergeComponent)CreateComponent(index, typeof(ECS.Components.Command.MergeComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMerge(ECS.Components.Command.MergeInfoVo newValue) {
        var index = CommandComponentsLookup.Merge;
        var component = (ECS.Components.Command.MergeComponent)CreateComponent(index, typeof(ECS.Components.Command.MergeComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMerge() {
        RemoveComponent(CommandComponentsLookup.Merge);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherMerge;

    public static Entitas.IMatcher<CommandEntity> Merge {
        get {
            if (_matcherMerge == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.Merge);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherMerge = matcher;
            }

            return _matcherMerge;
        }
    }
}
