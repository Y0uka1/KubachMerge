//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleGroundEntity {

    public ECS.Components.BattleGround.FighterDamageComponent fighterDamage { get { return (ECS.Components.BattleGround.FighterDamageComponent)GetComponent(BattleGroundComponentsLookup.FighterDamage); } }
    public bool hasFighterDamage { get { return HasComponent(BattleGroundComponentsLookup.FighterDamage); } }

    public void AddFighterDamage(long newValue) {
        var index = BattleGroundComponentsLookup.FighterDamage;
        var component = (ECS.Components.BattleGround.FighterDamageComponent)CreateComponent(index, typeof(ECS.Components.BattleGround.FighterDamageComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFighterDamage(long newValue) {
        var index = BattleGroundComponentsLookup.FighterDamage;
        var component = (ECS.Components.BattleGround.FighterDamageComponent)CreateComponent(index, typeof(ECS.Components.BattleGround.FighterDamageComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFighterDamage() {
        RemoveComponent(BattleGroundComponentsLookup.FighterDamage);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class BattleGroundMatcher {

    static Entitas.IMatcher<BattleGroundEntity> _matcherFighterDamage;

    public static Entitas.IMatcher<BattleGroundEntity> FighterDamage {
        get {
            if (_matcherFighterDamage == null) {
                var matcher = (Entitas.Matcher<BattleGroundEntity>)Entitas.Matcher<BattleGroundEntity>.AllOf(BattleGroundComponentsLookup.FighterDamage);
                matcher.componentNames = BattleGroundComponentsLookup.componentNames;
                _matcherFighterDamage = matcher;
            }

            return _matcherFighterDamage;
        }
    }
}
